using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Cinemachine;
public class CameraSystem : MonoBehaviour
{
    [SerializeField] private CinemachineVirtualCamera; 
    private bool useEdgeScrolling = false;
    private bool useDragPan = false;

    private bool dragPanMoveActive;
    private Vector2 lastMousePosition;

    private void Update()
    {
        HandleCameraRotation();
        if (useEdgeScrolling)
        {
          HandleCameraMovementEdgeScrolling();
        }
        if (useDragPan)
        {
          HandleCameraMovementDragPan();
        }
        HandleCameraMovement();
        HandleCameraZoom();
    }

    private void HandleCameraMovement()
    {
        Vector3 inputDir = new Vector3(0,0,0);

        if (Input.GetKey(KeyCode.W)) inputDir.x = +1f;
        if (Input.GetKey(KeyCode.S)) inputDir.x = -1f;
        if (Input.GetKey(KeyCode.A)) inputDir.z = +1f;
        if (Input.GetKey(KeyCode.D)) inputDir.z = -1f;

        Vector3 moveDir = transform.forward * inputDir.z + transform.right * inputDir.x;
        
        float moveSpeed = 100f;
        transform.position += moveDir * moveSpeed * Time.deltaTime;
    }
    private void HandleCameraMovementEdgeScrolling()
    {
        Vector3 inputDir = new Vector3(0,0,0);
        int edgeScrollSize = 20;
          if(Input.mousePosition.x < edgeScrollSize)
          {
            inputDir.x = -1f;
          }
          if(Input.mousePosition.x > Screen.width - edgeScrollSize)
          {
            inputDir.x = +1f;
          }
          if(Input.mousePosition.y < edgeScrollSize)
          {
            inputDir.z = -1f;
          }
          if(Input.mousePosition.y > Screen.height - edgeScrollSize)
          {
            inputDir.z = +1f;
          }
        

        Vector3 moveDir = transform.forward * inputDir.z + transform.right * inputDir.x;
        
        float moveSpeed = 100f;
        transform.position += moveDir * moveSpeed * Time.deltaTime;

    }
    private void HandleCameraMovementDragPan()
    {
        Vector3 inputDir = new Vector3(0,0,0);
        if (Input.GetMouseButtonDown(1))
        {
          dragPanMoveActive = true;
          lastMousePosition = Input.mousePosition;
        }

        if (Input.GetMouseButtonUp(1))
        {
          dragPanMoveActive = false;
        }

        if (dragPanMoveActive)
        {
          Vector2 mouseMovementDelta = (Vector2)Input.mousePosition - lastMousePosition;
          
          float dragPanSpeed = 0.3f;
          inputDir.x = mouseMovementDelta.x * dragPanSpeed;
          inputDir.z = mouseMovementDelta.y * dragPanSpeed;

          lastMousePosition = Input.mousePosition;
        }

        Vector3 moveDir = transform.forward * inputDir.z + transform.right * inputDir.x;
        
        float moveSpeed = 100f;
        transform.position += moveDir * moveSpeed * Time.deltaTime;
    }
    private void HandleCameraRotation()
    {   
         float rotateDir = 0f;
         if (Input.GetKey(KeyCode.Q)) rotateDir = -1f;
         if (Input.GetKey(KeyCode.E)) rotateDir = +1f;

         float rotateSpeed = 100f;
         transform.eulerAngles += new Vector3(0, rotateDir * rotateSpeed * Time.deltaTime, 0);
    }

    private void HandleCameraZoom()
    {
        float zoomDir = 0f;
        if (Input.GetKey(KeyCode.R)) zoomDir = +1f;
        if (Input.GetKey(KeyCode.F)) zoomDir = -1f;

        float zoomSpeed = 100f;
        transform.position += transform.forward * zoomDir * zoomSpeed * Time.deltaTime;
    }
}
